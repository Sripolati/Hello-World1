{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText3",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText5",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText6",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "cast1"
				},
				{
					"name": "split1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          PurchaseOrderID as string,",
				"          CustomerCode as string,",
				"          ProductCode as string,",
				"          EmployeeCode as string,",
				"          PurchaseOrderDate as string,",
				"          Quantity as string,",
				"          UnitPrice as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 cast(output(",
				"          CustomerCode as integer",
				"     ),",
				"     errors: true) ~> cast1",
				"cast1 split(CustomerCode == 1,",
				"     disjoint: false) ~> split1@(CustomerCode1, CustomerCode2)",
				"split1@CustomerCode1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CustomerID as string,",
				"          NameStyle as string,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string,",
				"          PasswordHash as string,",
				"          PasswordSalt as string,",
				"          rowguid as string,",
				"          ModifiedDate as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1",
				"split1@CustomerCode2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CustomerID as string,",
				"          NameStyle as string,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string,",
				"          PasswordHash as string,",
				"          PasswordSalt as string,",
				"          rowguid as string,",
				"          ModifiedDate as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink2"
			]
		}
	}
}